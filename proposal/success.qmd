# Success
<!-- 
Projects should have a definition of done that is measurable, and a thorough understanding going in of what the risks are to delivery 
-->

The project will be considered a success if the following criteria are met:


- The key deliverables are met: the package includes the planned functionality, which is documented and tested.
- The documentation is available on the package website.
- At least 75% of the open issues on the planned work are closed or at least become work-in-progress.
- Feedback is sought (and incorporated as far as possible) from the R community.
- At least two community members that are not directly involved in the project contribute to the project, by submitting issues, making a pull request or making a commit to the git repository.

## Definition of done
<!-- 
What does success look like? 
-->

The project will be considered done when the following criteria are met:

- The R package is developed and tested.

- The package is documented and available on the package website.

- Feedback will be sought from the R community to ensure that the package meets the needs of the users.

## Measuring success
<!-- 
How will we know when success is achieved, what markers can we use along the way 
-->

The success of the project will be measured by the following metrics:

- At least 75% of the open issues on the planned work are closed or at least become work-in-progress.

- At least 85% of the pull requests are reviewed and merged.

- The package is documented and available on the package website.

## Future work
<!-- 
How could this be extended / developed in the future by yourself and/or the community in general?
-->

The project can be extended in the following ways:

It would be beneficial to refer to what has been previously built. For example, as a source, rOpenSci consults glosario, a community-curated glossary of data science terms, although it has a broader scope as a glossary. Hence, it would be worth considering syncing with glosario to ensure that the R glossary is consistent with the broader data science community. Thus, this work would benefit not only the R community but also the broader ecosystem. Given the broader scope of glosario, a two-way sync would be beneficial. For instance, a two-way sync for terms in the R glossary that are also in glosario, i.e.

- Copy over translations and explanations from glosario to the R glossary (under CC-By-4.0 license, attribution could be given in the documentation for the new package), where these are missing in the R glossary,
- Contribute any translations back from the R glossary to glosario

Applying a CC0 licence to the glossary would support in freely sharing the glossary with other projects.

Notably, there is an R package associated with glosario ([glosario-r]( https://github.com/carpentries/glosario-r/)), which is a WIP but can be used to retrieve glossaries.

## Key risks
<!-- 
What sort of things could come up that can delay or break the project?

 - [ ] People
 - [ ] Processes
 - [ ] Tooling & Technology
 - [ ] Costs

-->

The are not any major risks associated with this project. The idea for the project is based on an actual need by the R community and has the support of the RCWG. The lead developer has experience in developing R packages and has contributed to the R community. The project will follow the best practices for R package development and will seek feedback from the R community at appropriate stages.
